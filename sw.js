/*
 * Copyright 2021 Google Inc. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.4.1"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.4.1"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.4.1"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.4.1"]&&_()}catch(e){}}},t={};function s(r){var a=t[r];if(void 0!==a)return a.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(()=>{s(913);class e extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}const t={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},r=e=>[t.prefix,e,t.suffix].filter((e=>e&&e.length>0)).join("-"),a=e=>e||r(t.precache);function n(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class o{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const i=new Set;function c(e){return"string"==typeof e?new Request(e):e}s(873);class l{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new o,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(t){const{event:s}=this;let r=c(t);if("navigate"===r.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?r.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))r=await e({request:r.clone(),event:s})}catch(t){if(t instanceof Error)throw new e("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const n=r.clone();try{let e;e=await fetch(r,"navigate"===r.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:n,response:e});return e}catch(e){throw a&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:a.clone(),request:n.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=c(e);let s;const{cacheName:r,matchOptions:a}=this._strategy,n=await this.getCacheKey(t,"read"),o=Object.assign(Object.assign({},a),{cacheName:r});s=await caches.match(n,o);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:r,matchOptions:a,cachedResponse:s,request:n,event:this.event})||void 0;return s}async cachePut(t,s){const r=c(t);await(0,new Promise((e=>setTimeout(e,0))));const a=await this.getCacheKey(r,"write");if(!s)throw new e("cache-put-with-no-response",{url:(o=a.url,new URL(String(o),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var o;const l=await this._ensureResponseSafeToCache(s);if(!l)return!1;const{cacheName:h,matchOptions:u}=this._strategy,d=await self.caches.open(h),f=this.hasCallback("cacheDidUpdate"),p=f?await async function(e,t,s,r){const a=n(t.url,s);if(t.url===a)return e.match(t,r);const o=Object.assign(Object.assign({},r),{ignoreSearch:!0}),i=await e.keys(t,o);for(const t of i)if(a===n(t.url,s))return e.match(t,r)}(d,a.clone(),["__WB_REVISION__"],u):null;try{await d.put(a,f?l.clone():l)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of i)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:h,oldResponse:p,newResponse:l.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let r=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))r=c(await e({mode:t,request:r,event:this.event,params:this.params}));this._cacheKeys[s]=r}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),r=r=>{const a=Object.assign(Object.assign({},r),{state:s});return t[e](a)};yield r}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class h{constructor(e={}){this.cacheName=e.cacheName||r(t.runtime),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,r="params"in e?e.params:void 0,a=new l(this,{event:t,request:s,params:r}),n=this._getResponse(a,s,t);return[n,this._awaitComplete(n,a,s,t)]}async _getResponse(t,s,r){let a;await t.runCallbacks("handlerWillStart",{event:r,request:s});try{if(a=await this._handle(s,t),!a||"error"===a.type)throw new e("no-response",{url:s.url})}catch(e){if(e instanceof Error)for(const n of t.iterateCallbacks("handlerDidError"))if(a=await n({error:e,event:r,request:s}),a)break;if(!a)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))a=await e({event:r,request:s,response:a});return a}async _awaitComplete(e,t,s,r){let a,n;try{a=await e}catch(n){}try{await t.runCallbacks("handlerDidRespond",{event:r,request:s,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:r,request:s,response:a,error:n}),t.destroy(),n)throw n}}const u={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};function d(e,t){const s=t();return e.waitUntil(s),s}function f(t){if(!t)throw new e("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:s,url:r}=t;if(!r)throw new e("add-to-cache-list-unexpected-type",{entry:t});if(!s){const e=new URL(r,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(r,location.href),n=new URL(r,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:n.href}}s(977);class p{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class g{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let y,w;class m extends h{constructor(e={}){e.cacheName=a(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(m.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(t,s){let r;const a=s.params||{};if(!this._fallbackToNetwork)throw new e("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const e=a.integrity,n=t.integrity,o=!n||n===e;r=await s.fetch(new Request(t,{integrity:n||e})),e&&o&&(this._useDefaultCacheabilityPluginIfNeeded(),await s.cachePut(t,r.clone()))}return r}async _handleInstall(t,s){this._useDefaultCacheabilityPluginIfNeeded();const r=await s.fetch(t);if(!await s.cachePut(t,r.clone()))throw new e("bad-precaching-response",{url:t.url,status:r.status});return r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,r]of this.plugins.entries())r!==m.copyRedirectedCacheableResponsesPlugin&&(r===m.defaultPrecacheCacheabilityPlugin&&(e=s),r.cacheWillUpdate&&t++);0===t?this.plugins.push(m.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}m.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},m.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await async function(t,s){let r=null;if(t.url&&(r=new URL(t.url).origin),r!==self.location.origin)throw new e("cross-origin-copy-response",{origin:r});const a=t.clone(),n={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},o=s?s(n):n,i=function(){if(void 0===y){const e=new Response("");if("body"in e)try{new Response(e.body),y=!0}catch(e){y=!1}y=!1}return y}()?a.body:await a.blob();return new Response(i,o)}(t):t};class b{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new m({cacheName:a(e),plugins:[...t,new g({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(t){const s=[];for(const r of t){"string"==typeof r?s.push(r):r&&void 0===r.revision&&s.push(r.url);const{cacheKey:t,url:a}=f(r),n="string"!=typeof r&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==t)throw new e("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:t});if("string"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(t)&&this._cacheKeysToIntegrities.get(t)!==r.integrity)throw new e("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(t,r.integrity)}if(this._urlsToCacheKeys.set(a,t),this._urlsToCacheModes.set(a,n),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return d(e,(async()=>{const t=new p;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const r=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:r,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:r}=t;return{updatedURLs:s,notUpdatedURLs:r}}))}activate(e){return d(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),r=[];for(const a of t)s.has(a.url)||(await e.delete(a),r.push(a.url));return{deletedURLs:r}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(t){const s=this.getCacheKeyForURL(t);if(!s)throw new e("non-precached-url",{url:t});return e=>(e.request=new Request(t),e.params=Object.assign({cacheKey:s},e.params),this.strategy.handle(e))}}const v=()=>(w||(w=new b),w);s(80);const _=e=>e&&"object"==typeof e?e:{handle:e};class R{constructor(e,t,s="GET"){this.handler=_(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=_(e)}}class C extends R{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class L{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const r=s.origin===location.origin,{params:a,route:n}=this.findMatchingRoute({event:t,request:e,sameOrigin:r,url:s});let o=n&&n.handler;const i=e.method;if(!o&&this._defaultHandlerMap.has(i)&&(o=this._defaultHandlerMap.get(i)),!o)return;let c;try{c=o.handle({url:s,request:e,event:t,params:a})}catch(e){c=Promise.reject(e)}const l=n&&n.catchHandler;return c instanceof Promise&&(this._catchHandler||l)&&(c=c.catch((async r=>{if(l)try{return await l.handle({url:s,request:e,event:t,params:a})}catch(e){e instanceof Error&&(r=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw r}))),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:r}){const a=this._routes.get(s.method)||[];for(const n of a){let a;const o=n.match({url:e,sameOrigin:t,request:s,event:r});if(o)return a=o,(Array.isArray(a)&&0===a.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(a=void 0),{route:n,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,_(e))}setCatchHandler(e){this._catchHandler=_(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(t){if(!this._routes.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this._routes.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this._routes.get(t.method).splice(s,1)}}let U;function q(t,s,r){let a;if("string"==typeof t){const e=new URL(t,location.href);a=new R((({url:t})=>t.href===e.href),s,r)}else if(t instanceof RegExp)a=new C(t,s,r);else if("function"==typeof t)a=new R(t,s,r);else{if(!(t instanceof R))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=t}return(U||(U=new L,U.addFetchListener(),U.addCacheListener()),U).registerRoute(a),a}class k extends R{constructor(e,t){super((({request:s})=>{const r=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:r=!0,urlManipulation:a}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(n,t);if(yield o.href,s&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=s,yield e.href}if(r){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:n});for(const t of e)yield t.href}}(s.url,t)){const t=r.get(a);if(t)return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}),e.strategy)}}let T,E;const D=new WeakMap,K=new WeakMap,x=new WeakMap,S=new WeakMap,I=new WeakMap;let P={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return K.get(e);if("objectStoreNames"===t)return e.objectStoreNames||x.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return N(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function M(e){return"function"==typeof e?(t=e)!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(E||(E=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(j(this),e),N(D.get(this))}:function(...e){return N(t.apply(j(this),e))}:function(e,...s){const r=t.call(j(this),e,...s);return x.set(r,e.sort?e.sort():[e]),N(r)}:(e instanceof IDBTransaction&&function(e){if(K.has(e))return;const t=new Promise(((t,s)=>{const r=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",n),e.removeEventListener("abort",n)},a=()=>{t(),r()},n=()=>{s(e.error||new DOMException("AbortError","AbortError")),r()};e.addEventListener("complete",a),e.addEventListener("error",n),e.addEventListener("abort",n)}));K.set(e,t)}(e),s=e,(T||(T=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((e=>s instanceof e))?new Proxy(e,P):e);var t,s}function N(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const r=()=>{e.removeEventListener("success",a),e.removeEventListener("error",n)},a=()=>{t(N(e.result)),r()},n=()=>{s(e.error),r()};e.addEventListener("success",a),e.addEventListener("error",n)}));return t.then((t=>{t instanceof IDBCursor&&D.set(t,e)})).catch((()=>{})),I.set(t,e),t}(e);if(S.has(e))return S.get(e);const t=M(e);return t!==e&&(S.set(e,t),I.set(t,e)),t}const j=e=>I.get(e),O=["get","getKey","getAll","getAllKeys","count"],B=["put","add","delete","clear"],W=new Map;function A(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(W.get(t))return W.get(t);const s=t.replace(/FromIndex$/,""),r=t!==s,a=B.includes(s);if(!(s in(r?IDBIndex:IDBObjectStore).prototype)||!a&&!O.includes(s))return;const n=async function(e,...t){const n=this.transaction(e,a?"readwrite":"readonly");let o=n.store;return r&&(o=o.index(t.shift())),(await Promise.all([o[s](...t),a&&n.done]))[0]};return W.set(t,n),n}var F,$;$=P,P={...$,get:(e,t,s)=>A(e,t)||$.get(e,t,s),has:(e,t)=>!!A(e,t)||$.has(e,t)};var H=new Uint8Array(16);function V(){if(!F&&!(F="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return F(H)}const G=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,z=function(e){return"string"==typeof e&&G.test(e)};for(var J=[],Q=0;Q<256;++Q)J.push((Q+256).toString(16).substr(1));const X=function(e,t,s){var r=(e=e||{}).random||(e.rng||V)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){s=s||0;for(var a=0;a<16;++a)t[s+a]=r[a];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=(J[e[t+0]]+J[e[t+1]]+J[e[t+2]]+J[e[t+3]]+"-"+J[e[t+4]]+J[e[t+5]]+"-"+J[e[t+6]]+J[e[t+7]]+"-"+J[e[t+8]]+J[e[t+9]]+"-"+J[e[t+10]]+J[e[t+11]]+J[e[t+12]]+J[e[t+13]]+J[e[t+14]]+J[e[t+15]]).toLowerCase();if(!z(s))throw TypeError("Stringified UUID is invalid");return s}(r)};class Y{constructor(e){console.log("Database initialized"),this.db=e}static async create(){return new Y(await function(e,t,{blocked:s,upgrade:r,blocking:a,terminated:n}={}){const o=indexedDB.open(e,t),i=N(o);return r&&o.addEventListener("upgradeneeded",(e=>{r(N(o.result),e.oldVersion,e.newVersion,N(o.transaction))})),s&&o.addEventListener("blocked",(()=>s())),i.then((e=>{n&&e.addEventListener("close",(()=>n())),a&&e.addEventListener("versionchange",(()=>a()))})).catch((()=>{})),i}("appDB",void 0,{upgrade(e,t,s,r){console.log("DB update request"),e.createObjectStore("blob"),e.createObjectStore("metadata"),e.createObjectStore("miscStringVals")}}))}async add(e,t){const s=X(),r=Date.now(),a={id:s,metadata:t,added:r,blobModified:r,metadataModified:r},n=this.db.transaction(["blob","metadata"],"readwrite");return await Promise.allSettled([n.objectStore("blob").put(e,s),n.objectStore("metadata").put(a,s),n.done]),console.log(`successfully added '${s}'`),a}async list(){return this.db.getAll("metadata")}async getFile(e){const t=await this.db.get("blob",e);if(t)return console.log(`successfully retrieved blob for '${e}'`),t;console.log(`no blob found for id '${e}'`)}async get(e){const t=await this.db.get("metadata",e);if(t)return console.log(`successfully retrieved metadata for '${e}'`),t;console.log(`no record found for id '${e}'`)}async update(e,t,s){if(!t&&!s)throw new TypeError("neither |file| nor |metadata| was provided");const r=this.db.transaction(["blob","metadata"],"readwrite"),a=Date.now(),n=await r.objectStore("metadata").get(e);if(!n)throw new ReferenceError(`no record found for id '${e}'`);return s&&(n.metadata=s,n.metadataModified=a),t&&(n.blobModified=a,await r.objectStore("blob").put(t,e)),await r.objectStore("metadata").put(n,e),await r.done,console.log(`successfully updated '${e}'`),n}async delete(e){const t=this.db.transaction(["blob","metadata"],"readwrite");await Promise.allSettled([await t.objectStore("blob").delete(e),await t.objectStore("metadata").delete(e),await t.done]),console.log(`deleted '${e}'`)}}var Z;Z=[{'revision':'b1bd20d5532cf7d5483deb9401d24e9c','url':'icon.png'},{'revision':'682cee1b7ef10fd2a8c5339d0bcebd89','url':'index.html'},{'revision':null,'url':'llaminator.71debf37f44c6c722536.js'},{'revision':'ddaef1761da9718367006e6a051e587c','url':'llaminator.71debf37f44c6c722536.js.LICENSE.txt'},{'revision':'6dfaaa4dc8b1128b9b73ebc311b2ee23','url':'llaminator.css'},{'revision':'46c707f6814e8493ec02eef5a78efa69','url':'manifest.json'}],v().precache(Z),function(e){const t=v();q(new k(t,undefined))}(),q((({url:e})=>e.pathname.endsWith("/share-target")),(async({request:e})=>{const t=await e.formData();return indexedDB,async function(e,t){const s=new Blob([await e.arrayBuffer()],{type:e.type}),r=await t.add(s,{filename:e.name,mimeType:e.type});console.log(`stored image as id ${r.id}`)}(t.get("image"),await Y.create()),Response.redirect("/",302)}),"POST"),q((({url:e})=>!0),new class extends h{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(u)}async _handle(t,s){const r=s.fetchAndCachePut(t).catch((()=>{}));let a,n=await s.cacheMatch(t);if(n);else try{n=await r}catch(e){e instanceof Error&&(a=e)}if(!n)throw new e("no-response",{url:t.url,error:a});return n}}({cacheName:"app-cache"}))})()})();
